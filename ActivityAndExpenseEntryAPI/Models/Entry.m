//
//  Entry.m
//  ActivityAndExpenseEntryAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#import "Entry.h"

@implementation Entry

/**
* TODO: Write general description for this method
*/
@synthesize identifier;

/**
* TODO: Write general description for this method
*/
@synthesize type;

/**
* ISO 8601:2004 date and time in UTC or with a specific offset
*/
@synthesize creationDate;

/**
* ISO 8601:2004 date and time in UTC or with a specific offset
*/
@synthesize modificationDate;

/**
* TODO: Write general description for this method
*/
@synthesize status;

/**
* TODO: Write general description for this method
*/
@synthesize statusText;

/**
* TODO: Write general description for this method
*/
@synthesize validationError;

/**
* TODO: Write general description for this method
*/
@synthesize userFields;

 /**
 * For serialization of enum EntryStatusEnum type property as NSString*
 */
-(id) JSONObjectForStatus
{
     
    return [EntryStatusEnumHelper stringFromEntryStatusEnum:(enum EntryStatusEnum) status withDefault: nil];

}

/**
 * For deserialization of enum EntryStatusEnum type property from NSString*
 */
 
-(void)setStatusWithNSString:(NSString*) strValue
{
    status = [EntryStatusEnumHelper entryStatusEnumFromString:(NSString*) strValue];
}




/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"id": @"identifier",
        @"type": @"type",
        @"creationDate": @"creationDate",
        @"modificationDate": @"modificationDate",
        @"status": @"status",
        @"statusText": @"statusText",
        @"validationError": @"validationError",
        @"userFields": @"userFields"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end
