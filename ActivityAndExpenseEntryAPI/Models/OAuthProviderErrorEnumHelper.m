//
//  OAuthProviderErrorEnum.h
//  ActivityAndExpenseEntryAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#include "OAuthProviderErrorEnumHelper.h"

/**
* Helper class implementation for OAuthProviderErrorEnum to NSString conversion
*/
@implementation OAuthProviderErrorEnumHelper

+(id) stringFromOAuthProviderErrorEnum:(enum OAuthProviderErrorEnum) oAuthProviderErrorEnum withDefault: (id) defaultValue
{
    switch(oAuthProviderErrorEnum)
    {
        case OAuthProviderErrorInvalidRequest:
            return @"invalid_request";

        case OAuthProviderErrorInvalidClient:
            return @"invalid_client";

        case OAuthProviderErrorInvalidGrant:
            return @"invalid_grant";

        case OAuthProviderErrorUnauthorizedClient:
            return @"unauthorized_client";

        case OAuthProviderErrorUnsupportedGrantType:
            return @"unsupported_grant_type";

        case OAuthProviderErrorInvalidScope:
            return @"invalid_scope";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromOAuthProviderErrorEnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [OAuthProviderErrorEnumHelper stringFromOAuthProviderErrorEnum:(enum OAuthProviderErrorEnum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum OAuthProviderErrorEnum) oAuthProviderErrorEnumFromString:(NSString*) strValue
{
    NSArray* OAuthProviderErrorEnumArray = [NSArray arrayWithObjects:
                                        @"invalid_request",
                                        @"invalid_client",
                                        @"invalid_grant",
                                        @"unauthorized_client",
                                        @"unsupported_grant_type",
                                        @"invalid_scope",
                                        nil];

    return (enum OAuthProviderErrorEnum) [OAuthProviderErrorEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) oAuthProviderErrorEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ OAuthProviderErrorEnumHelper oAuthProviderErrorEnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end