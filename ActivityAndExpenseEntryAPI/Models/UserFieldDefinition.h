//
//  UserFieldDefinition.h
//  ActivityAndExpenseEntryAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#ifndef APIMATIC_USERFIELDDEFINITION
#define APIMATIC_USERFIELDDEFINITION

#import <Foundation/Foundation.h>
#import "JSONModel.h"
#import "APIHelper.h"

#import "Enumerator.h"
#import "JSONSchema.h"


//protocol defined for deserialization of JSON
@protocol UserFieldDefinition
@end

@interface UserFieldDefinition : Enumerator

/**
* TODO: Write general description for this field
*/
@property NSNumber* index;

/**
* a list of labels, corresponding to an enum defined in 'schema'
*/
@property NSArray* enumLabels;

/**
* Allows a subset of JSON schema (draft 7).
* See: http://json-schema.org/latest/json-schema-validation.html
* Date and time format names are derived from RFC 3339, section 5.6 => ISO 8601.
* There's no support for native JSON numbers because of accuracy problems.
* All numbers are represented with strings.
* Fraction digits and integer digits may be specified with "multipleOf", "maximum" and "minimum".
* The actual number of digits cannot be specified as with number formats, where leading trailing zeros may be appended.
* Example cases:
* NONE:       not listed in "required",   "type": "null"                              => a null value or an absent property
* OPTIONAL:   not listed in "required",   "type": "a type != null"                    => an optional non-null property
* REQUIRED:   listed in "required",       "type": "a type != null"                    => a required non-null property
* PREDEFINED: listed in "required",       "type": "any type", "const": "predefinedValue" => a predefined property (null or non-null)
*/
@property JSONSchema* schema;


/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap;

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper;

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName;

@end
#endif