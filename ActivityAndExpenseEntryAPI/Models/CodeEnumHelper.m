//
//  CodeEnum.h
//  ActivityAndExpenseEntryAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#include "CodeEnumHelper.h"

/**
* Helper class implementation for CodeEnum to NSString conversion
*/
@implementation CodeEnumHelper

+(id) stringFromCodeEnum:(enum CodeEnum) codeEnum withDefault: (id) defaultValue
{
    switch(codeEnum)
    {
        case CodeD:
            return @"d";

        case CodeH:
            return @"h";

        case CodeMin:
            return @"min";

        case CodeKm:
            return @"km";

        case CodeEnum1:
            return @"1";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromCodeEnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [CodeEnumHelper stringFromCodeEnum:(enum CodeEnum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum CodeEnum) codeEnumFromString:(NSString*) strValue
{
    NSArray* CodeEnumArray = [NSArray arrayWithObjects:
                                        @"d",
                                        @"h",
                                        @"min",
                                        @"km",
                                        @"1",
                                        nil];

    return (enum CodeEnum) [CodeEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) codeEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ CodeEnumHelper codeEnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end