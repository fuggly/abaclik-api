//
//  AllowEnum.h
//  ActivityAndExpenseEntryAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#include "AllowEnumHelper.h"

/**
* Helper class implementation for AllowEnum to NSString conversion
*/
@implementation AllowEnumHelper

+(id) stringFromAllowEnum:(enum AllowEnum) allowEnum withDefault: (id) defaultValue
{
    switch(allowEnum)
    {
        case AllowNone:
            return @"none";

        case AllowAll:
            return @"all";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromAllowEnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [AllowEnumHelper stringFromAllowEnum:(enum AllowEnum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum AllowEnum) allowEnumFromString:(NSString*) strValue
{
    NSArray* AllowEnumArray = [NSArray arrayWithObjects:
                                        @"none",
                                        @"all",
                                        nil];

    return (enum AllowEnum) [AllowEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) allowEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ AllowEnumHelper allowEnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end